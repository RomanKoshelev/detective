@{
    // >> Process | View | Classic | Arrest *
    @Arrest()
}
@using Crimenuts.App.Web.Models
@using Crimenuts.Core.Game
@model ProcessModel

@functions
{

    private int? Face
    {
        get { return ViewBag.Face; }
    }

    private bool ArrestIsEnabled()
    {
        return Model.State == State.Arrest && Model.UserActionIsEnabled(Process.UserAction.ActionType.Arrest);
    }

    private bool EarlyArrestIsEnabled()
    {
        return Model.UserActionIsEnabled(Process.UserAction.ActionType.EarlyArrest);
    }

    private bool ContinueIsEnabled()
    {
        return Model.UserActionIsEnabled(Process.UserAction.ActionType.Continue);
    }

}

@helper Arrest()
{
    @Hint()
    @Result()
    @EarlyArrestButton()
    @ArrestButton()
    @ContinueButton()
}


@helper EarlyArrestButton()
{
    if (EarlyArrestIsEnabled() && ProcessView.CanArrest(Face))
    {
        @Record(BoardView.Button(
            Localization.Text("Button:Arrest") + ProcessView.MemberName(Face),
            BoardView.ButtonEarlyArrestClass,
            ProcessView.EarlyArrestActionUrl((int) Face)))
    }
}

@helper ArrestButton()
{
    if (ArrestIsEnabled() && ProcessView.CanArrest(Face))
    {
        @BoardView.Record(
            BoardView.Button(
                Localization.Text("Button:Arrest") + ProcessView.MemberName(Face),
                BoardView.ButtonArrestClass,
                ProcessView.ArrestActionUrl((int) Face)),
            BoardView.ArrestClass)
    }
}

@helper ContinueButton()
{
    if (Model.State == State.CheckArrest && ContinueIsEnabled())
    {
        @BoardView.Record(
            BoardView.Button(
                Localization.Text("Button:Continue"),
                BoardView.ButtonContinueClass,
                ProcessView.ContinueActionUrl()),
            BoardView.ArrestClass)
    }
}


@helper Hint()
{
    if (ArrestIsEnabled() && !ProcessView.CanArrest(Face))
    {
        @Record(BoardView.HintMemberVariants(
            Shared.Text(Localization.Text("Arrest:Hint:Select:Suspect")),
            ProcessView.ArrestVariants()
            ))
    }
}

@helper Result()
{
    if (Model.State == State.CheckArrest)
    {
        @BoardView.Record(
            ArrestTitle(),
            BoardView.RecordInfoSection(ResultSection()),
            BoardView.ArrestClass)
    }
    if (Model.State == State.Arrest && ProcessView.CanArrest(Face))
    {
        @BoardView.Record(
            ArrestTitle(),
            SuspectSection(),
            BoardView.ArrestClass)
    }
}

@helper ResultSection()
{
    @BoardView.RespondentLink(Model.TodayPrisoner) 
    @Localization.Gender("was", Model.TodayPrisoner.Sex) 
    @BoardView.Highlight(Localization.Text(Model.TodayPrisoner.Role.ToString().ToLower()))
}

@helper SuspectSection()
{
    @Localization.Text("Arrest:You suspect") @BoardView.RespondentLink(ProcessView.Member(Face))
}



@helper ArrestTitle()
{
    @Shared.Text(Model.State == State.Arrest || Model.State == State.CheckArrest
        ? Localization.Text("Title:State:Arrest")
        : "")
}

@helper Record(HelperResult rec)
{
    @BoardView.Record(
        ArrestTitle(),
        rec,
        BoardView.ArrestClass)
}