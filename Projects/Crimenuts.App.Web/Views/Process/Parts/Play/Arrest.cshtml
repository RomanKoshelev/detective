@{
    @Arrest()
}
@using Crimenuts.Core.Game
@model Crimenuts.App.Web.Models.ProcessModel 

@functions
{

    private int? Face
    {
        get { return ViewBag.Face; }
    }

    private bool ArrestIsEnabled()
    {
        return Model.State == State.Arrest && Model.UserActionIsEnabled( Process.UserAction.ActionType.Arrest );
    }

    private bool EarlyArrestIsEnabled()
    {
        return Model.UserActionIsEnabled( Process.UserAction.ActionType.EarlyArrest );
    }

    private bool ContinueIsEnabled()
    {
        return Model.UserActionIsEnabled( Process.UserAction.ActionType.Continue );
    }

}

@helper Arrest()
{
    @Hint()
    @Result()
    @EarlyArrestButton()
    @ArrestButton()
    @ContinueButton()
}


@helper EarlyArrestButton()
{
    if( EarlyArrestIsEnabled() && ProcessView.CanArrest( Face ) ) {
        @Record( RoomView.Button(
            Localization.Text( "Button:Arrest" ) + ProcessView.MemberName( Face ),
            RoomView.ButtonEarlyArrestClass,
            ProcessView.EarlyArrestActionUrl( ( int ) Face ) ) )
    }
}

@helper ArrestButton()
{
    if( ArrestIsEnabled() && ProcessView.CanArrest( Face ) ) {
        @RoomView.Record(
            RoomView.Button(
                Localization.Text( "Button:Arrest" ) + ProcessView.MemberName( Face ),
                RoomView.ButtonArrestClass,
                ProcessView.ArrestActionUrl( ( int ) Face ) ),
            RoomView.ArrestClass )
    }
}

@helper ContinueButton()
{
    if( Model.State == State.CheckArrest && ContinueIsEnabled() ) {
        @RoomView.Record(
            RoomView.Button(
                Localization.Text( "Button:Continue" ),
                RoomView.ButtonContinueClass,
                ProcessView.ContinueActionUrl() ),
            RoomView.ArrestClass )
    }
}


@helper Hint()
{
    if( ArrestIsEnabled() && !ProcessView.CanArrest( Face ) ) {
        @Record( RoomView.HintMemberVariants(
            Shared.Text( Localization.Text( "Arrest:Hint:Select:Suspect" ) ),
            ProcessView.ArrestVariants()
            ) )
    }
}

@helper Result()
{
    if( Model.State == State.CheckArrest ) {
        @RoomView.Record(
            ArrestTitle(),
            RoomView.RecordInfoSection( ResultSection() ),
            RoomView.ArrestClass )
    }
    if( Model.State == State.Arrest && ProcessView.CanArrest( Face ) ) {
        @RoomView.Record(
            ArrestTitle(),
            SuspectSection(),
            RoomView.ArrestClass )
    }
}

@helper ResultSection()
{
    @RoomView.RespondentLink( Model.TodayPrisoner )
    @Localization.GenderForm( "was", Model.TodayPrisoner.Sex )
    @RoomView.Highlight( Localization.GenderForm( Model.TodayPrisoner.Role.ToString().ToLower(), Model.TodayPrisoner.Sex ) )
}

@helper SuspectSection()
{
    @Localization.Text( "Arrest:You suspect" )
    @RoomView.RespondentLink( ProcessView.Member( Face ) )
}



@helper ArrestTitle()
{
    @Shared.Text( Model.State == State.Arrest || Model.State == State.CheckArrest
        ? Localization.Text( "Title:State:Arrest" )
        : "" )
}

@helper Record( HelperResult rec )
{
    @RoomView.Record(
        ArrestTitle(),
        rec,
        RoomView.ArrestClass )
}