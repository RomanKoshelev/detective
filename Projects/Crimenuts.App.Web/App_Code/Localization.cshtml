@using System.Web.Mvc
@using Crimenuts.App.Web.Models
@using Crimenuts.Core.Game
@using Crimenuts.Utils.Localization
@functions{
    //  >> App_Code | Localization 
    // Now: Localization | App_Code

    // ===================================================================================== []
    // Data
    private static void InitLocalizator()
    {
        Localizator.RegisterLanguage(Lang.En);
        Localizator.RegisterLanguage(Lang.Ru);
           
        Localizator.Set("was")
            .Set(Lang.En)
            .Set(Lang.Ru, "был")
            ;

        Localizator.Set("innocent")
            .Set(Lang.En)
            .Set(Lang.Ru, "невиновный")
            ;

        Localizator.Set(":answer")
            .Set(Lang.En, "answer")
            .Set(Lang.Ru, "ответ")
                .Plural(Lang.Ru, 2, "ответа")
                .Plural(Lang.Ru, 5, "ответов")
            ;       

        Localizator.Set("or")
            .Set(Lang.En)
            .Set(Lang.Ru, "или")
            ;
        Localizator.Set("plural:num:null")
            .Set(Lang.En, "unknown number")
            .Set(Lang.Ru, "неизвестное количество")
            ;

        Localizator.Set("was killed")
            .Set(Lang.En)
            .Set(Lang.Ru, "был убит")
            ;

        Localizator.Set("murderer")
            .Set(Lang.En)
            .Set(Lang.Ru, "убийца")
                .Plural(Lang.Ru, 2, "убийцы")
                .Plural(Lang.Ru, 5, "убийц")
            ;

        Localizator.Set("day")
            .Set(Lang.En)
            .Set(Lang.Ru, "день")
            ;
        
        Localizator.Set("Title:Crime Nuts")
            .Set(Lang.En, "Crime Nuts")
            .Set(Lang.Ru, "Криминальные Загадки")
            ;

        Localizator.Set("Menu:Home")
            .Set(Lang.En, "Home")
            .Set(Lang.Ru, "Домой")
            ;
        Localizator.Set("Menu:Cases")
            .Set(Lang.En, "Cases")
            .Set(Lang.Ru, "Дела")
            ;
        Localizator.Set("Menu:Processes")
            .Set(Lang.En, "Processes")
            .Set(Lang.Ru, "Процессы")
            ;

        Localizator.Set("Game:Case #")
            .Set(Lang.En, "Case #")
            .Set(Lang.Ru, "Дело № ")
            ;
        Localizator.Set("Game:Questioning:Ask")
            .Set(Lang.En, "Question")
            .Set(Lang.Ru, "Спросить")
            ;
        Localizator.Set("Game:Questioning:About")
            .Set(Lang.En, "about")
            .Set(Lang.Ru, "про")
            ;
        Localizator.Set("Game:Questioning:Auto")
            .Set(Lang.En, "auto")
            .Set(Lang.Ru, "автоматически")
            ;
        Localizator.Set("Game:Questioning:No answers yet")
            .Set(Lang.En, "No answers yet")
            .Set(Lang.Ru, "Пока нет ответов")
            ;
        Localizator.Set("Game:Questioning:Answer:is")
            .Set(Lang.En, "is")
            .Set(Lang.Ru, "—")
            ;

        Localizator.Set(Answer.Innocent.PrefixedString())
            .Set(Lang.En, "Innocent")
            .Set(Lang.Ru, "Невиновный")
            ;
        Localizator.Set(Answer.Murderer.PrefixedString())
            .Set(Lang.En, "Murderer")
            .Set(Lang.Ru, "Убийца")
            ;
        Localizator.Set(Answer.Unknown.PrefixedString())
            .Set(Lang.En, "unknown")
            .Set(Lang.Ru, "неизвестный")
            ;
        Localizator.Set(Answer.NotSuspicious.PrefixedString())
            .Set(Lang.En, "not suspicious")
            .Set(Lang.Ru, "не подозрительный")
            ;
        Localizator.Set(Answer.Suspicious.PrefixedString())
            .Set(Lang.En, "suspicious")
            .Set(Lang.Ru, "подозрительный")
            ;

        Localizator.Set("Arrest:Hint:Select:Suspect")
            .Set(Lang.En, "Select suspicious member:")
            .Set(Lang.Ru, "Веберете подозрительного участника:")
            ;   
        
        Localizator.Set("Button:Arrest")
            .Set(Lang.En, "Arrest ")
            .Set(Lang.Ru, "Арестовать ")
            ;   
        
        Localizator.Set("Button:Continue")
            .Set(Lang.En, "Continue")
            .Set(Lang.Ru, "Продолжить")
            ;   
        
        Localizator.Set("Title:State:Arrest")
            .Set(Lang.En, "Arrest:")
            .Set(Lang.Ru, "Арест:")
            ;
        Localizator.Set("Arrest:You suspect")
            .Set(Lang.En, "You suspect ")
            .Set(Lang.Ru, "Вы подозреваете: ")
            ;

        Localizator.Set("Arrest:Result:Arrested")
            .Set(Lang.En, "Arrested ")
            .Set(Lang.Ru, "Арестованный ")
            ;

        Localizator.Set("History:Arrested")
            .Set(Lang.En, "arrested")
            .Set(Lang.Ru, "арестован")
            ;

        Localizator.Set("History:Murder:died")
            .Set(Lang.En, "died")
            .Set(Lang.Ru, "погиб")
            ;       
       
            
    }

    // ===================================================================================== []
    // Tools
    private static bool _needInit = true;

    private static void InitLocalizatorIfNeed()
    {
        if (!_needInit) return;
        InitLocalizator();
        _needInit = false;
    }

    public static string Text(string key)
    {
        InitLocalizatorIfNeed();
        if (key == null)
            return "{null}";
        return Localizator.GetTranslation(key, CurrentLanguage);
    }

    private static Lang GetCookieLang()
    {
        var langInCookie = Request.Cookies[SiteModel.LangCookieName];
        if (langInCookie != null)
        {
            try
            {
                return (Lang) int.Parse(langInCookie.Value);
            }
            catch
            {
                return Lang.En;
            }
        }
        return Lang.En;
    }

    public static Lang CurrentLanguage
    {
        get { return GetCookieLang(); }
    }

    public static string Format(string format, params object[] args)
    {
        for (var i = 0; i<args.Count(); i++)
        {
            args[i] = Text(args[i].ToString());
        }
        return string.Format(format, args);
    }

    public static string NumPlural(string format, int? num, string noun)
    {
        return string.Format(
            format,
            num == null ? Text("plural:num:null") : num.ToString(),
            Plural(num, noun)
            );
    }
    
    public static string NumPlural(int? num, string noun)
    {
        return NumPlural("{0} {1}", num, noun);
    }

    public static string Plural(int? num, string noun)
    {
        return Localizator.Plural(num, noun, CurrentLanguage);
    }

}