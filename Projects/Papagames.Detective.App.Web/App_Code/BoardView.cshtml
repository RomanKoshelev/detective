@using System.Web.Mvc
@using Papagames.Detective.App.Web.Models
@functions{
    // >> App_Code > BoardView ***

    private new static ProcessModel Model
    {
        get { return (ProcessModel) ((WebViewPage) WebPageContext.Current.Page).Model; }
    }

    private static int? Face
    {
        get { return ViewBag.Face; }
    }

    private static dynamic ViewBag
    {
        get { return ((WebViewPage) WebPageContext.Current.Page).ViewBag; }
    }

    public static string TodayClass
    {
        get { return "det-gamelog-today"; }
    }

    public static string ButtonArrestClass
    {
        get { return "det-arrest-button"; }
    }

    public static string ButtonEarlyArrestClass
    {
        get { return "det-arrest-button-lite"; }
    }

    public static string ButtonContinueClass
    {
        get { return "det-continue-button"; }
    }

    public static string ArrestClass
    {
        get { return "det-gamelog-today"; }
    }

    public static string DetectiveClass
    {
        get { return "det-gamelog-detective"; }
    }

    public static string MemberLinkClass
    {
        get { return "det-gamelog-member-link"; }
    }

    public static string HighlightClass
    {
        get { return "det-gamelog-highlight"; }
    }

    public static string SubjectLinkClass
    {
        get { return "det-gamelog-subject-highlight"; }
    }

    public static string RespondentLinkClass
    {
        get { return "det-gamelog-highlight"; }
    }

    public static string HintVariantsClass
    {
        get { return "det-gamelog-hint-variants"; }
    }

    public static string HintTitleClass
    {
        get { return "det-gamelog-hint-title"; }
    }
    public static string HistoryClass
    {
        get { return "det-gamelog-history"; }
    }

    public static string ResultClass
    {
        get { return "det-gamelog-result"; }
    }


    public static string SubjectHihglightClass(MemberModel subject)
    {
        return subject.Number == Face ? SubjectLinkClass : "";
    }

    public static string RespondentHihglightClass(MemberModel respondent)
    {
        return respondent.Number == Face ? RespondentLinkClass : "";
    }

}

@helper Highlight(string text)
{
    @Highlight(Shared.Text(text))
}

@helper Highlight(HelperResult text)
{
    <span class="@HighlightClass">@text</span>
}

@helper Button(string text, string bclass, string url)
{
    <div class="det-button-panel">
        @Shared.Link(text,
            bclass + "  det-button",
            url)
    </div>
}

@helper Record(HelperResult day, HelperResult info, string infoClass = "")
{
    <div class="det-gamelog-record">
        <div class="det-gamelog-record-day">
            @day
        </div>
        <div class="det-gamelog-record-info @infoClass">
            @info
        </div>
    </div>
}

@helper Record(HelperResult info, string infoClass = "")
{
    @Record(
        Shared.Text(""),
        info,
        infoClass)
}

@helper TodayRecord(HelperResult info, string infoClass = "")
{
    @Record(
        Shared.Format("Day {0}:", Model.Today),
        info,
        infoClass)
}

@helper RecordInfoSection(HelperResult infoSection, string infoSectionClass = "")
{
    <div class="det-gamelog-record-info-section @infoSectionClass">
        @infoSection
    </div>
}

@helper MemberLink(MemberModel member, string suffix = " ")
{
    @Shared.Link(member.Name, MemberLinkClass, ProcessView.MemberFaceUrl(member.Number))@suffix
}


@helper SubjectLink(MemberModel subject, string suffix = " ")
{
    @Shared.Link(subject.Name, MemberLinkClass + " " + SubjectHihglightClass(subject), ProcessView.MemberFaceUrl(subject.Number))@suffix
}

@helper RespondentLink(MemberModel respondent, string suffix = " ")
{
    if (respondent == null)
    {
        @Shared.Text("nobody")
    }
    else
    {
        @Shared.Link(respondent.Name, MemberLinkClass + " " + RespondentHihglightClass(respondent), ProcessView.MemberFaceUrl(respondent.Number))@suffix
    }
}


@helper HintMemberVariants(
    HelperResult text,
    IList<int> members,
    Func<MemberModel, string, HelperResult> actionLinkFunc = null,
    string suffix = " ",
    Func<HelperResult> additionalVariantsFunc = null)
{
    if (actionLinkFunc == null)
    {
        actionLinkFunc = MemberLink;
    }

    <div class="@HintTitleClass">
        @text
    </div>
    <div class="@HintVariantsClass">
        @foreach (var num in members)
        {
            @actionLinkFunc(ProcessView.Member(num), suffix)
        }
        @if (additionalVariantsFunc != null)
        {
            @additionalVariantsFunc()
        }
    </div>
}

@helper HintSubjectVariants(
    HelperResult text,
    int respondent,
    IList<int> members,
    Func<MemberModel, MemberModel, string, HelperResult> actionLinkFunc,
    string suffix = " ")
{
    <div class="@HintTitleClass">
        @text
    </div>
    <div class="@HintVariantsClass">
        @foreach (var num in members)
        {
            @actionLinkFunc(ProcessView.Member(respondent), ProcessView.Member(num), suffix)
        }
    </div>
}