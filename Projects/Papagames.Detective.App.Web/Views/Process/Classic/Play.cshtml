@model Papagames.Detective.App.Web.Models.ProcessModel
@*
// ============================================================================================= []
// Functions
*@
@functions {

    private string MemberName(int i)
    {
        var name = Model.Members.Where(m => m.Number == i).Select(m => m.Name).FirstOrDefault();
        return name ?? " ";
    }

    private bool MemberExists(int i)
    {
        return Model.Members.Any(m => m.Number == i);
    }

    private bool MemberIsActive(int i)
    {
        return Model.ActiveMembers.Any(m => m.Number == i);
    }

    private string CurrentCardClass(int n)
    {
        return _currentMember == n ? " det-card-primary" : MemberIsActive(n) ? " det-card-secondary" : "";
    }
    private string ActiveCardClass(int n)
    {
        return MemberIsActive(n) ? " det-card-active" : " det-card-inactive";
    }

    private int _currentMember;

    private string CurrentMemberFaceClass(int n)
    {
        return _currentMember == n ? " det-member-face-primary" : " det-member-face-secondary";
    }

    private string MemberFace(int m)
    {
        return (MemberIsActive(m) ? ":)" : "x");
    }
}

@{
    // >> View: Process/Classic/Play
    ViewBag.Title = "Crime Nuts Case #" + Model.CaseId;
    Layout = "~/Views/Shared/Layouts/Classic.cshtml";
    ViewData["id"] = Model.Id;
    _currentMember = 2;
}
@helper Header()
{
    <div class="det-green-pad det-border-bottom-red-4">
        <nav>
            <ul>
                <li>
                    Crime Nuts Case #17, Find all murderers
                </li>
                <li class="text-align-right">
                    Home | Cases | Help
                </li>
            </ul>
        </nav>
    </div>
}

@helper Footer()
{
    <div class="det-green-pad det-border-top-red-4">
        <nav>
            <ul>
                <li>
                    Crime Nuts (c) RKDev 2015
                </li>
                <li class="text-align-right">
                    Loc | Pub | Jira | Azura | Github
                </li>
            </ul>
        </nav>
    </div>
}

@helper Content()
{
    <div class="det-page-content">
        <div class="det">
            <div class="det">
                @Room()
            </div>
            <div class="det-dev height-400">
                Files
            </div>
        </div>
    </div>
}

@helper Room()
{
    <div id="members-top" class="det">
        @Members(1, 6, true)
    </div>
    <div class="det-desktop det-desktop-color">
        @Desktop()
    </div>
    <div id="members-bottom" class="det">
        @Members(7, 12, false)
    </div>
}

@helper History()
{
    @DaySummary("Day 1", "Summary")
    @DaySummary("Day 2", "Summary")
}
@helper DaySummary(string day, string summary)
{
    <div class="det-dev">
        <div class="det-dev raw">
            <div class="det-dev cell width-100">
                @day
            </div>
            <div class="det-dev cell width-auto">
                @summary
            </div>
        </div>
    </div>
}

@helper Today()
{
    <div class="det-dev raw">
        <div class="det-dev cell width-100">
            Day 3
        </div>
        <div class="det-dev cell width-auto">
            Today Information
            <div class="det-dev">
                Murders
            </div>
            <div class="det-dev">
                Evidences
            </div>
            <div class="det-dev">
                Answers
            </div>
            <div class="det-dev">
                Arrest
            </div>
        </div>
    </div>
}
@*
// ============================================================================================= []
// Desktop
*@
@helper Desktop()
{
    <div class="det">
        @Cards(1, 6)
    </div>
    <div class="det-dev height-300">
        Play desk
        @*@Infozone()*@
    </div>
    <div class="det">
        @Cards(7, 12)
    </div>
}
@helper Infozone()
{
    <div class="det-dev">
        History
        @History()
    </div>
    <div class="det-dev">
        Today
        @Today()
    </div>
    <div class="det-dev">
        Result
    </div>
    <div class="det-dev">
        Actions
        <div class="det-dev">
            Questioning
        </div>
        <div class="det-dev">
            Arrest
        </div>
        <div class="det-dev">
            Next Day
        </div>
        <div class="det-dev">
            Reveal Details
        </div>
    </div>
}
@*
// ============================================================================================= []
// Members
*@
@helper Members(int first, int last, bool sideIsTop)
{
    <nav>
        <ul>
            @for (var i = first; i <= last; i++)
            {
                <li class="det-member">
                    @Member(i, sideIsTop)
                </li>
            }
        </ul>
    </nav>
}
@helper Member(int i, bool sideIsTop)
{
    <div class="det-member-cell-aligment" align="center">
        <div class="det-member-cell-content" align="center">
            @if (MemberExists(i))
            {
                if (sideIsTop && MemberIsActive(i) || !sideIsTop && !MemberIsActive(i))
                {
                    @FaceIndent()
                    @Face(i)
                }
                else
                {
                    @Face(i)
                    @FaceIndent()
                }
            }
        </div>
    </div>
}
@helper Face(int m)
{
    <div class="@("det-member-cell-content-face" + CurrentMemberFaceClass(m))" align="center">
        <div class="det-member-cell-content-face-text vertical" align="center">
            @MemberFace(m)
        </div>
    </div>
}
@helper FaceIndent()
{
    <div class="det-member-cell-content-indent">
    </div>
}
@*
// ============================================================================================= []
// Cards
*@
@helper Cards(int first, int last)
{
    <nav class="det-desktop-color">
        <ul>
            @for (var i = first; i <= last; i++)
            {
                <li class="det-card">
                    @Card(i)
                </li>
            }
        </ul>
    </nav>
}
@helper Card(int n)
{
    <div class="det-card-aligment" align="center">
        <div class="@("det-card-content" + CurrentCardClass(n) + ActiveCardClass(n))" align="center">
            @if (MemberExists(n))
            {
                @MemberName(n)
            }
        </div>
    </div>
}

@*
// ============================================================================================= []
// Main
*@
<div align="center" class="det-body">
    <div align="left" class="det-page">
        @Header()
        @Content()
        @Footer()
    </div>
</div>