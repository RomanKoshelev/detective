@using Papagames.Detective.Core.Game
@{
    // >> Process > View > Classic > Members
    @Members((int) ViewBag.First, (int) ViewBag.Last, (bool) ViewBag.SideIsTop)
}

@functions
{

    private string CurrentMemberFaceClass(int num)
    {
        return
            ProcessView.MemberIsActive(num)
                ? num==Face
                    ? " det-member-face-active-primary"
                    : " det-member-face-active-secondary"
                : ProcessView.Member(num).IsOpenMurderer
                    ? " det-member-face-inactive-murderer"
                    : ProcessView.Member(num).IsOpenInnocent
                        ? " det-member-face-inactive-innocent"
                        : "";
    }

    private string MemberFaceEmotionClass(int num)
    {
        return ProcessView.MemberIsAlive(num) ? " det-member-face-text-alive det-vertical" : " det-member-face-text-dead";
    }

    private string EmotionMarker(int num, int? subj)
    {
        switch (ProcessView.MemberEmotion(num, subj))
        {
            case Emotion.Happy:
                return ":)";
            case Emotion.Sad:
                return ":(";
            case Emotion.Indifferent:
                return ":|";
            default:
                return "ERROR";
        }
    }

    private MvcHtmlString MemberFace(int num, int? subj)
    {
        return new MvcHtmlString(
            ProcessView.MemberIsAlive(num) ?
                EmotionMarker(num, subj) :
                "x x<br>__"
            );
    }

    private bool FaceIsLinked(int num)
    {
        return Face != num;
    }
    
    private int? Face
    {
        get { return ViewBag.Face; }
    }

}

@helper Members(int first, int last, bool sideIsTop)
{
    <nav>
        <ul>
            @for (var i = first; i <= last; i++)
            {
                <li class="det-member">
                    @Member(i, sideIsTop)
                </li>
            }
        </ul>
    </nav>
}

@helper Member(int i, bool sideIsTop)
{
    <div class="det-member-cell-aligment" align="center">
        <div class="det-member-cell-content" align="center">
            @if (ProcessView.MemberExists(i))
            {
                if (sideIsTop && ProcessView.MemberIsActive(i) || !sideIsTop && !ProcessView.MemberIsActive(i))
                {
                    @FaceIndent()
                    @FaceFrame(i)
                }
                else
                {
                    @FaceFrame(i)
                    @FaceIndent()
                }
            }
        </div>
    </div>
}

@helper FaceFrame(int num)
{
    <div class="det-member-cell-content-face @CurrentMemberFaceClass(num)">
        @if (FaceIsLinked(num))
        {
            @FaceLink(num)
        }
        else
        {
            <span class="@MemberFaceEmotionClass(num) det-member-face-link">
                @MemberFace(num, ViewBag.Face)
            </span>
        }

    </div>
}

@helper FaceIndent()
{
    <div class="det-member-cell-content-indent">
    </div>
}
@helper FaceLink(int num)
{
    <a class="@MemberFaceEmotionClass(num) det-member-face-link"
       href="@Url.Action("ClassicPlay", "Process", new {id = Model.Id, face = num})">
        @MemberFace(num, ViewBag.Face)
    </a>
}