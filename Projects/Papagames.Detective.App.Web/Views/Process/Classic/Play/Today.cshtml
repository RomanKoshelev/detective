@{
    // >> Process > View > Classic > Today *
    @Today()
}
@using Papagames.Detective.Core.Game
@model Papagames.Detective.App.Web.Models.ProcessModel

@functions
{

    private int? Face
    {
        get { return ViewBag.Face; }
    }

    private string EvidencesNumDescription()
    {
        if (Model.TodayEvidencesNum == null)
            return "some evidences";
        if (Model.InnocentsLeft == 1)
            return "an evidence";
        return string.Format("{0} evidences", Model.TodayEvidencesNum);
    }

}

@helper Today()
{
    switch (Model.State)
    {
        case State.Questioning:
        case State.Arrest:
        case State.CheckArrest:
            @NightEvents()
            break;
    }
}


@helper NightEvents()
{
    @BoardView.TodayRecord(MurderAndEvidences(), BoardView.TodayClass)
    
}

@helper MurderAndEvidences()
{
    @:@HighlightVictim(@VictimLink())@HighlightVictim("was killed.")
    @Shared.Format("Guiltless made {0}.", @EvidencesNumDescription())
}

@helper HighlightVictim(HelperResult text)
{
    @(Face == Model.TodayVictim.Number
          ? BoardView.Highlight(text)
          : text)
}

@helper HighlightVictim(string text)
{
    if (Face == Model.TodayVictim.Number)
    {
        @BoardView.Highlight(text)
    }
    else
    {
        @text
    }
}


@helper VictimLink()
{ @BoardView.MemberLink(Model.TodayVictim) }