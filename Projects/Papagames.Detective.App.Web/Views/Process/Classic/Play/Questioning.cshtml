@{
    // >> Process > View > Classic > Questioning *
    @Questioning()
}
@using Papagames.Detective.App.Web.Models
@using Papagames.Detective.Core.Game
@model ProcessModel

@functions
{

    private string AnswerSelectedFaceClass(int num)
    {
        return num == Face ? " det-answer-highlight" : "";
    }

    private string MemberSubjectLinkClass(int num)
    {
        return num == Face ? " det-answer-highlight-subject" : "";
    }

    private int? Face
    {
        get { return ViewBag.Face; }
    }

}

@helper Questioning()
{
    <div class="det-gamelog-record">
        <div class="det-gamelog-record-day det-answers-color"></div>
        <div class="det-gamelog-record-info">
            @Answers()
            @Hint()
        </div>
    </div>
}

@helper Answers()
{
    <div class="det-gamelog-record det-answers-color">
        @foreach (var a in Model.TodayAnswers())
        {
            var answerSelectedFaceClass = AnswerSelectedFaceClass(a.Agent.Number);
            <div class="det-today-info-answer">
                <div class="det-today-info-answer-agent @answerSelectedFaceClass">
                    @MemberLink(a.Agent)
                </div>
                <div class="det-today-info-answer-value @answerSelectedFaceClass">
                    &nbsp;&mdash; @MemberSubjectLink(a.Subject) is @a.Value.Verbal()
                </div>
            </div>
        }
    </div>
}

@helper Hint()
{
    if (Model.State == State.Questioning)
    {
        <div class="det-gamelog-record det-answers-color">
            @( !ProcessView.CanAsk(Face) ? HintRespondents() : HintSubjects((int) Face))
        </div>
    }
}

@helper AutoQuestioning()
{
    if (Model.Options.AutoQuestioningIsEnabled
        && ProcessView.QuestioningRespondents().Count >= 2
        && (Face == null || ProcessView.QuestioningSubjects((int) Face).Count == 0))
    {
        <span> or @Shared.Link("auto", "det-answers-member-link det-answers-color det-no-wrap", ProcessView.AutoAskActionUrl())</span>
    }
}
@helper MemberLink(MemberModel member, string subjClass = "", string suffix = " ")
{
    @Shared.Link(
        member.Name,
        "det-answers-member-link det-answers-color det-no-wrap " + subjClass,
        ProcessView.MemberFaceUrl(member.Number)
        )@suffix
}

@helper AskActionLink(MemberModel respondent, MemberModel subject, string subjClass = "", string suffix = " ")
{
    @Shared.Link(
        subject.Name,
        "det-answers-member-link det-answers-color det-no-wrap " + subjClass,
        ProcessView.AskActionUrl(respondent.Number, subject.Number)
        )@suffix
}


@helper MemberSubjectLink(MemberModel subject)
{ @MemberLink(subject, MemberSubjectLinkClass(subject.Number)) }


@helper HintRespondents()
{
    <div class="det-gamelog-record">
        Ask:
        <div class="det-answer-hint-variants">
            @foreach (var respondent in ProcessView.QuestioningRespondents())
            {
                @MemberLink(ProcessView.Member(respondent))
            }@AutoQuestioning()
        </div>
    </div>
}

@helper HintSubjects(int respondent)
{
    <div class="det-answer-hint">Ask @ProcessView.MemberName(respondent) about:</div>
    <div class="det-answer-hint-variants">
        @foreach (var subject in ProcessView.QuestioningSubjects(respondent))
        {
            @AskActionLink(ProcessView.Member(respondent), ProcessView.Member(subject))
        }
    </div>
}