@{
    // >> Process > View > Classic > Questioning ****
    @Questioning()
}
@using Papagames.Detective.App.Web.Models
@using Papagames.Detective.Core.Game
@model ProcessModel

@functions
{

    private string AnswerSelectedFaceClass(int num)
    {
        return num == Face ? " det-answer-highlight" : "";
    }
    
    private string MemberSubjectLinkClass(int num)
    {
        return num == Face ? " det-answer-highlight-subject" : "";
    }

    private int? Face
    {
        get { return ViewBag.Face; }
    }


}

@helper Questioning()
{
    <div class="det-today">
        <div class="det-today-day det-answers-color"></div>
        <div class="det-today-info">
            @Answers()
            @Hints()
            @AutoQuestioning()
        </div>
    </div>
}

@helper Answers()
{
    <div class="det-today-info-answers det-answers-color">
        @foreach (var a in Model.TodayAnswers())
        {
            var answerSelectedFaceClass = AnswerSelectedFaceClass(a.Agent.Number);
            <div class="det-today-info-answer">
                <div class="det-today-info-answer-agent @answerSelectedFaceClass">
                    @MemberLink(a.Agent)
                </div>
                <div class="det-today-info-answer-value @answerSelectedFaceClass">
                    &nbsp;&mdash; @MemberSubjectLink(a.Subject) is @a.Value.Verbal()
                </div>
            </div>
        }
    </div>
}

@helper Hints()
{
    if (Model.TodayAnswers().Count == 0)
    {
        <span class="det-today-info-answers det-answers-color">
            @if (Face == null)
            {
                @:Who do you want to interview?
            }
            else
            {
                @:Who is the subject to @ProcessView.MemberName((int) Face)'s questioning?
            }
        </span>
    }
}

@helper AutoQuestioning()
{
    if (Model.Options.AutoQuestioningIsEnabled && Model.TodayAnswers().Count == 0 && Face == null)
    {
        <a class="det-today-info-answers det-answers-color" href="@ProcessView.AutoAskActionUrl()">
            auto
        </a>
    }
}
@helper MemberLink(MemberModel member, string subjClass="")
{
    <a class="det-answers-member-link det-answers-color @subjClass" href="@ProcessView.MemberFaceActionUrl(member.Number)">@member.Name</a>
}
@helper MemberSubjectLink(MemberModel subject)
{
    @MemberLink(subject, MemberSubjectLinkClass(subject.Number))
}
