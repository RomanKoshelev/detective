@using Papagames.Detective.Core.Game
@using Papagames.Detective.Utils
@using Papagames.Detective.App.Web.Models
@using Action = Papagames.Detective.Core.Game.Action
@model ProcessModel
@{
    // >> View: Process/Play/Table
    ViewBag.Title = "Play Detective Process [table view]";
    Layout = "~/Views/Shared/Layouts/Table.cshtml";
    ViewData["id"] = Model.Id;
}
@*// ================================================================================== []*@
@helper ProcessInfo()
{
    <h2>@Model.ShortInfo</h2>
    <ul>
        <li>
            @Html.ActionLink(Model.Case.ShortInfo, "Info", "Case", new {id = Model.CaseId}, new {target = "_self"})
            (@Html.ActionLink("Relations", "Relations", "Case", new {id = Model.CaseId}, new {target = "_self"}))
        </li>
        <li>
            State: @Model.State
        </li>
        @if (Model.State != State.Finished)
        {
            <li>
                Last night evidences num: @("Unknown".IfNull(Model.LastNightEvidencesNum))
            </li>
            <li>
                Murderers left: @("Unknown".IfNull(Model.MurderersLeft))
            </li>
        }
    </ul>
}
@*// ================================================================================== []*@
@helper Members()
{
    <h3>Members</h3>
    <ul>
        <li>
            Active:
            @{ Html.RenderPartial("~/Views/Process/List/Common/Member.cshtml", Model.ActiveMembers, ViewData); }
        </li>
        <li>
            Prisoners:
            @{ Html.RenderPartial("~/Views/Process/List/Common/Member.cshtml", Model.Prisoners, ViewData); }
        </li>
        <li>
            Victims:
            @{ Html.RenderPartial("~/Views/Process/List/Common/Member.cshtml", Model.Victims, ViewData); }
        </li>
    </ul>
}
@*// ================================================================================== []*@
@helper Emotions()
{
    <h3>Emotions</h3>
    <ul>
        <li>
            On Murder:
            @{
                ViewData["EmotionType"] = Action.MurderEmotion;
                Html.RenderPartial("~/Views/Process/List/Play/Emotion.cshtml", Model.History, ViewData);
            }
        </li>

        <li>
            On Arrest:
            @{
                ViewData["EmotionType"] = Action.ArrestEmotion;
                Html.RenderPartial("~/Views/Process/List/Play/Emotion.cshtml", Model.History, ViewData);
            }
        </li>
    </ul>
}
@*// ================================================================================== []*@
@helper History()
{
    <h3>History</h3>
    Html.RenderPartial("~/Views/Process/List/Play/History.cshtml", Model.History, ViewData);
}
@*// ================================================================================== []*@
@helper Answers()
{
    <h3>Answers</h3>
    Html.RenderPartial("~/Views/Process/List/Play/Answer.cshtml", Model.History, ViewData);
}
@*// ================================================================================== []*@
@helper Actions()
{
    if (Model.State != State.Finished)
    {
        <h3>Actions</h3>
        Html.RenderPartial("~/Views/Process/List/Play/UserAction.cshtml", Model.UserActions, ViewData);
    }
}
@*// ================================================================================== []*@
@helper Result()
{
    if (Model.State == State.Finished)
    {
        <li>
            <b>Winner: @Model.Winner</b>
        </li>
    }
}
@*// ================================================================================== []*@
@helper Table()
{
    <table width="600">
        <tr style="vertical-align: top;">
            <td width="300">
                @Members()
                @Actions()
            </td>
            <td width="300">
                @Answers()
                @Emotions()
                @History()
            </td>
        </tr>
    </table>
}
@*// ================================================================================== []*@


@ProcessInfo()
@Result()
@Table()